<section class="tracking-widest bg-gradient-to-br from-gray-50 to-gray-200 dark:from-gray-900 dark:to-gray-800 min-h-screen flex flex-col items-center p-8 font-sans relative overflow-hidden">
  <div class="absolute inset-0 bg-cover bg-center bg-no-repeat" style="background-image: url(<%= asset_path('request-page.webp') %>);"></div>
  <div class="absolute inset-0 bg-gray-50/95 dark:bg-gray-900/95"></div>

  <div class="max-w-5xl mx-auto px-4 z-10 relative">
    <div class="p-4 sm:p-8 mb-4">
      <div class="text-center">
        <h1 class="text-3xl sm:text-4xl lg:text-6xl font-black text-gray-800 dark:text-gray-100 tracking-tight leading-none">
          Запити на<br><span class="text-gray-600 dark:text-gray-400">Переклад</span>
        </h1>
      </div>
      <p class="text-gray-700 dark:text-gray-300 text-lg sm:text-xl lg:text-2xl font-light mt-4 text-center">
        Знайдіть досвідчених перекладачів для перекладу улюбленого твору!
      </p>
    </div>
  </div>

  <div class="w-full max-w-7xl relative z-10">
    <!-- Two Column Layout -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-10">
      <!-- Left Column: Active Requests -->
      <div class="border border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-gray-800/80 backdrop-filter backdrop-blur-xl rounded-2xl shadow-2xl p-6 relative overflow-hidden">
        <div class="absolute top-0 right-0 w-16 h-16 opacity-10">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
            <circle cx="50" cy="50" r="40" fill="none" stroke="currentColor" stroke-width="2"/>
            <path d="M50 10v80M10 50h80" stroke="currentColor" stroke-width="2"/>
          </svg>
        </div>

        <!-- Background pattern -->
        <div class="absolute inset-0 z-0 opacity-5">
          <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
            <pattern id="left-requests-pattern" x="0" y="0" width="40" height="40" patternUnits="userSpaceOnUse">
              <path d="M0 0h40v40H0z" fill="none"/>
              <path d="M0 20h40M20 0v40" stroke="currentColor" stroke-width="0.5"/>
              <circle cx="20" cy="20" r="1" fill="currentColor"/>
            </pattern>
            <rect width="100%" height="100%" fill="url(#left-requests-pattern)"/>
          </svg>
        </div>

        <div class="relative z-10">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center">
              <div class="h-6 w-6 rounded-lg bg-cyan-100 dark:bg-rose-900/20 flex items-center justify-center mr-2">
                <svg class="h-3 w-3 text-cyan-600 dark:text-rose-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>
                </svg>
              </div>
              <h3 class="text-lg font-extrabold text-gray-700 dark:text-gray-200">Активні Запити</h3>
            </div>
            <span class="text-xs font-bold text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-full"><%= @translation_requests.length %></span>
          </div>
          
          <div class="space-y-3">
            <% if @translation_requests.any? %>
              <% @translation_requests.each do |request| %>
                <div class="bg-gray-50/50 dark:bg-gray-700/30 border border-gray-200 dark:border-gray-600 rounded-lg p-2.5 hover:border-cyan-300 dark:hover:border-rose-400 transition-all duration-300">
                  <div class="mb-2">
                    <h4 class="text-sm font-semibold text-gray-800 dark:text-gray-200 mb-1.5 leading-tight"><%= request.title %></h4>
                    
                    <div class="space-y-0.5 mb-1.5">
                      <% if request.author.present? %>
                        <div class="text-2xs">
                          <span class="text-gray-500 dark:text-gray-500">Автор:</span>
                          <span class="font-medium text-gray-700 dark:text-gray-300"><%= request.author %></span>
                        </div>
                      <% end %>
                      <% if request.source_url.present? %>
                        <div class="text-2xs">
                          <span class="text-gray-500 dark:text-gray-500">Джерело:</span>
                          <%= link_to "Переглянути", request.source_url, 
                              class: "text-cyan-600 dark:text-rose-400 hover:underline font-medium", 
                              target: "_blank", rel: "noopener" %>
                        </div>
                      <% end %>
                    </div>
                  </div>
                  <p class="text-2xs text-gray-600 dark:text-gray-400 mb-2 whitespace-pre-line"><%= request.notes %></p>
                  
                  <!-- Voting Section -->
                  <div class="flex items-center justify-between pt-2 border-t border-gray-200 dark:border-gray-600">
                    <div class="flex items-center gap-2">
                      <% if user_signed_in? %>
                        <button 
                          onclick="voteOnRequest(<%= request.id %>)"
                          class="vote-btn upvote-btn-<%= request.id %> flex items-center gap-1 px-1.5 py-0.5 rounded text-2xs transition-colors duration-200 
                            <%= request.user_voted?(current_user) ? 'bg-cyan-100 text-cyan-700 dark:bg-rose-900/30 dark:text-rose-400' : 'text-gray-500 hover:bg-cyan-50 hover:text-cyan-600 dark:text-gray-400 dark:hover:bg-rose-900/20 dark:hover:text-rose-400' %>">
                          <svg class="w-2.5 h-2.5" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
                          </svg>
                          <span class="upvote-count-<%= request.id %>"><%= request.upvote_count %></span>
                        </button>
                        <div class="text-2xs font-medium text-gray-600 dark:text-gray-400 votes-text-<%= request.id %>">
                          <span class="votes-count-<%= request.id %>"><%= request.votes_count %></span> голосів
                        </div>
                      <% else %>
                        <div class="flex items-center gap-2">
                          <div class="flex items-center gap-1 text-2xs text-gray-500 dark:text-gray-400">
                            <svg class="w-2.5 h-2.5" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
                            </svg>
                            <span><%= request.upvote_count %></span>
                          </div>
                          <div class="text-2xs font-medium text-gray-600 dark:text-gray-400">
                            <span class="votes-count-<%= request.id %>"><%= request.votes_count %></span> голосів
                          </div>
                        </div>
                      <% end %>
                    </div>
                  </div>

                  <!-- Assignment Status and Actions -->
                  <div class="mt-2 pt-2 border-t border-gray-200 dark:border-gray-600">
                    <div id="assignment-status-<%= request.id %>">
                      <% if request.assigned? %>
                        <!-- Already assigned -->
                        <div class="flex items-center justify-between gap-1">
                          <div class="flex items-center gap-1 min-w-0 flex-1">
                            <div class="h-3 w-3 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center flex-shrink-0">
                              <svg class="h-1.5 w-1.5 text-green-600 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                              </svg>
                            </div>
                            <span class="text-2xs font-medium text-green-700 dark:text-green-400 truncate"><%= request.scanlator.title %></span>
                          </div>
                          <% if user_signed_in? && current_user.scanlators.include?(request.scanlator) %>
                            <button onclick="unassignRequest(<%= request.id %>)" 
                                    class="text-2xs bg-red-500 hover:bg-red-600 text-white font-medium px-2 py-0.5 rounded text-center flex-shrink-0 transition-colors duration-200">
                              ×
                            </button>
                          <% end %>
                        </div>
                      <% elsif user_signed_in? && current_user.scanlators.any? %>
                        <!-- Available for assignment and user is a scanlator member -->
                        <div class="flex items-center justify-between gap-1">
                          <div class="flex items-center gap-1 min-w-0 flex-1">
                            <div class="h-3 w-3 rounded-full bg-orange-100 dark:bg-orange-900/30 flex items-center justify-center flex-shrink-0">
                              <svg class="h-1.5 w-1.5 text-orange-600 dark:text-orange-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z" clip-rule="evenodd"/>
                              </svg>
                            </div>
                            <span class="text-2xs text-orange-700 dark:text-orange-400">Вільний</span>
                          </div>
                          <div class="relative flex-shrink-0">
                            <button onclick="toggleAssignmentDropdown(<%= request.id %>)" 
                                    class="assign-btn text-2xs bg-cyan-500 hover:bg-cyan-600 dark:bg-rose-500 dark:hover:bg-rose-600 text-white font-medium px-2 py-0.5 rounded transition-colors duration-200 flex items-center gap-1">
                              +
                              <svg class="w-2 h-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
                              </svg>
                            </button>
                            <div id="assignment-dropdown-<%= request.id %>" class="hidden absolute right-0 mt-1 w-40 bg-white dark:bg-gray-800 rounded shadow-lg z-10 border border-gray-200 dark:border-gray-600">
                              <div class="py-1">
                                <% current_user.scanlators.each do |scanlator| %>
                                  <button onclick="assignRequest(<%= request.id %>, <%= scanlator.id %>)" 
                                          class="block w-full text-left px-3 py-1.5 text-2xs text-gray-700 dark:text-gray-300 hover:bg-cyan-50 dark:hover:bg-rose-900/20 hover:text-cyan-600 dark:hover:text-rose-400 transition-colors duration-200 truncate">
                                    <%= scanlator.title %>
                                  </button>
                                <% end %>
                              </div>
                            </div>
                          </div>
                        </div>
                      <% else %>
                        <!-- Available but user is not a scanlator member -->
                        <div class="flex items-center gap-1">
                          <div class="h-3 w-3 rounded-full bg-orange-100 dark:bg-orange-900/30 flex items-center justify-center flex-shrink-0">
                            <svg class="h-1.5 w-1.5 text-orange-600 dark:text-orange-400" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z" clip-rule="evenodd"/>
                            </svg>
                          </div>
                          <span class="text-2xs text-orange-700 dark:text-orange-400">Вільний</span>
                        </div>
                      <% end %>
                    </div>
                  </div>
                  <div class="flex justify-between items-center text-2xs pt-1.5 border-t border-gray-200 dark:border-gray-600 mt-1.5">
                    <span class="text-gray-500 dark:text-gray-500 truncate mr-2">
                      <%= link_to request.user.name, profile_path(request.user.sqid), 
                          class: "font-medium text-cyan-600 dark:text-rose-400 hover:underline" %>
                    </span>
                    <span class="text-gray-500 dark:text-gray-500 flex-shrink-0">
                      <%= time_ago_in_words(request.created_at) %> тому
                    </span>
                  </div>
                </div>
              <% end %>
            <% else %>
              <div class="text-center py-8">
                <div class="h-12 w-12 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center mx-auto mb-4">
                  <svg class="h-6 w-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>
                  </svg>
                </div>
                <p class="text-gray-500 dark:text-gray-400 text-sm">
                  Поки що немає активних запитів на переклад.<br>
                  Станьте першим, хто додасть запит!
                </p>
              </div>
            <% end %>
          </div>
        </div>
      </div>

      <!-- Right Column: Ad + Form Section -->
      <div class="lg:col-span-2 space-y-8">
        <!-- Ad Banner -->
        <div class="border border-gray-200 dark:border-gray-700 rounded-md shadow-md">
          <%= render 'shared/ads', advertisement: @advertisement %>
        </div>

        <!-- Request Form Section -->
      <div class="border border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-gray-800/80 backdrop-filter backdrop-blur-xl rounded-2xl shadow-2xl p-8 relative overflow-hidden">
        <div class="absolute top-0 right-0 w-24 h-24 opacity-10">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
            <circle cx="50" cy="50" r="40" fill="none" stroke="currentColor" stroke-width="2"/>
            <path d="M50 10v80M10 50h80" stroke="currentColor" stroke-width="2"/>
          </svg>
        </div>

        <!-- Background pattern -->
        <div class="absolute inset-0 z-0 opacity-5">
          <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
            <pattern id="form-pattern" x="0" y="0" width="40" height="40" patternUnits="userSpaceOnUse">
              <path d="M0 0h40v40H0z" fill="none"/>
              <path d="M0 20h40M20 0v40" stroke="currentColor" stroke-width="0.5"/>
              <circle cx="20" cy="20" r="1" fill="currentColor"/>
            </pattern>
            <rect width="100%" height="100%" fill="url(#form-pattern)"/>
          </svg>
        </div>

        <div class="relative z-10">
          <div class="flex items-center mb-6">
            <div class="h-8 w-8 rounded-lg bg-cyan-100 dark:bg-rose-900/20 flex items-center justify-center mr-3">
              <svg class="h-4 w-4 text-cyan-600 dark:text-rose-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
              </svg>
            </div>
            <h2 class="text-2xl font-extrabold text-gray-700 dark:text-gray-200">Додати Запит</h2>
          </div>
          <% if @translation_request&.errors&.any? %>
            <div class="bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-6">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-sm font-medium text-red-800 dark:text-red-200">
                    Помилки у формі:
                  </h3>
                  <div class="mt-2 text-sm text-red-700 dark:text-red-300">
                    <ul class="list-disc pl-5 space-y-1">
                      <% @translation_request.errors.full_messages.each do |message| %>
                        <li><%= message %></li>
                      <% end %>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
          
          <%= form_with model: @translation_request, url: translation_requests_path, method: :post, local: true, class: "space-y-6" do |f| %>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <%= f.label :title, 'Назва проекту', class: 'block text-gray-700 dark:text-gray-300 text-sm font-semibold mb-2' %>
                <%= f.text_field :title, placeholder: 'Наприклад: Solo Leveling - розділи 100-150', 
                    class: "w-full bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 placeholder-gray-500 dark:placeholder-gray-400 border border-gray-300 dark:border-gray-600 rounded-lg p-3 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500" %>
              </div>
              
              <div>
                <%= f.label :author, 'Автор оригіналу', class: 'block text-gray-700 dark:text-gray-300 text-sm font-semibold mb-2' %>
                <%= f.text_field :author, placeholder: 'Наприклад: Tatsuki Fujimoto', 
                    class: "w-full bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 placeholder-gray-500 dark:placeholder-gray-400 border border-gray-300 dark:border-gray-600 rounded-lg p-3 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500" %>
              </div>
            </div>
            
            <div>
              <%= f.label :source_url, 'Посилання на оригінал', class: 'block text-gray-700 dark:text-gray-300 text-sm font-semibold mb-2' %>
              <%= f.url_field :source_url, placeholder: 'https://example.com/manga-original', 
                  class: "w-full bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 placeholder-gray-500 dark:placeholder-gray-400 border border-gray-300 dark:border-gray-600 rounded-lg p-3 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500" %>
            </div>
            
            <div>
              <%= f.label :notes, 'Опис проекту та деталі', class: 'block text-gray-700 dark:text-gray-300 text-sm font-semibold mb-2' %>
              <%= f.text_area :notes, rows: 5, placeholder: 'Детально опишіть ваш проект, вимоги до перекладача, особливості роботи, бюджет, терміни, мову оригіналу тощо...', 
                  class: "whitespace-pre-line w-full bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 placeholder-gray-500 dark:placeholder-gray-400 border border-gray-300 dark:border-gray-600 rounded-lg p-3 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500" %>
            </div>
            
            <div class="flex justify-end">
              <%= f.submit 'Опублікувати Запит', 
                  class: 'bg-cyan-600 hover:bg-cyan-700 dark:bg-rose-600 dark:hover:bg-rose-700 text-white font-semibold py-3 px-8 rounded-lg transition duration-300 transform hover:scale-105 shadow-lg' %>
            </div>
          <% end %>
        </div>
      </div>
      </div>
    </div>
  </div>
</section>

<script>
function voteOnRequest(requestId) {
  // Disable the vote button to prevent double-clicking
  const upvoteBtn = document.querySelector(`.upvote-btn-${requestId}`);
  upvoteBtn.disabled = true;
  
  fetch(`/translate/${requestId}/votes`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
      'Accept': 'application/json'
    }
  })
  .then(response => response.json())
  .then(data => {
    if (data.error) {
      showErrorMessage(data.error);
      return;
    }
    
    // Update vote counts
    document.querySelector(`.upvote-count-${requestId}`).textContent = data.upvote_count;
    
    // Update the votes text for all instances (both logged in and non-logged in sections)
    const voteCountElements = document.querySelectorAll(`.votes-count-${requestId}`);
    voteCountElements.forEach(element => {
      element.textContent = data.votes_count;
    });
    
    // Update button styles based on user vote
    updateVoteButtonStyles(requestId, data.user_voted);
  })
  .catch(error => {
    console.error('Error:', error);
    showErrorMessage('Сталася помилка при голосуванні. Спробуйте ще раз.');
  })
  .finally(() => {
    // Re-enable button
    upvoteBtn.disabled = false;
  });
}

function updateVoteButtonStyles(requestId, userVoted) {
  const upvoteBtn = document.querySelector(`.upvote-btn-${requestId}`);
  
  if (userVoted) {
    upvoteBtn.className = `vote-btn upvote-btn-${requestId} flex items-center space-x-1 px-2 py-1 rounded text-xs transition-colors duration-200 bg-cyan-100 text-cyan-700 dark:bg-rose-900/30 dark:text-rose-400`;
  } else {
    upvoteBtn.className = `vote-btn upvote-btn-${requestId} flex items-center space-x-1 px-2 py-1 rounded text-xs transition-colors duration-200 text-gray-500 hover:bg-cyan-50 hover:text-cyan-600 dark:text-gray-400 dark:hover:bg-rose-900/20 dark:hover:text-rose-400`;
  }
}

function toggleAssignmentDropdown(requestId) {
  const dropdown = document.getElementById(`assignment-dropdown-${requestId}`);
  dropdown.classList.toggle('hidden');
  
  // Close other open dropdowns
  document.querySelectorAll('[id^="assignment-dropdown-"]').forEach(element => {
    if (element.id !== `assignment-dropdown-${requestId}`) {
      element.classList.add('hidden');
    }
  });
}

function assignRequest(requestId, scanlatorId) {
  // Close dropdown
  document.getElementById(`assignment-dropdown-${requestId}`).classList.add('hidden');
  
  fetch(`/translate/${requestId}/assign`, {
    method: 'PATCH',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
      'Accept': 'application/json'
    },
    body: JSON.stringify({
      scanlator_id: scanlatorId
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.error) {
      showErrorMessage(data.error);
      return;
    }
    
    if (data.success) {
      // Update the assignment status UI
      updateAssignmentStatus(requestId, data.scanlator_title, true);
      
      // Show success message
      showSuccessMessage(data.message);
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showErrorMessage('Сталася помилка при призначенні запиту. Спробуйте ще раз.');
  });
}

function unassignRequest(requestId) {
  fetch(`/translate/${requestId}/unassign`, {
    method: 'DELETE',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
      'Accept': 'application/json'
    }
  })
  .then(response => response.json())
  .then(data => {
    if (data.error) {
      showErrorMessage(data.error);
      return;
    }
    
    if (data.success) {
      // Update the assignment status UI to show as available
      updateAssignmentStatus(requestId, null, false);
      
      // Show success message
      showSuccessMessage(data.message);
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showErrorMessage('Сталася помилка при відкликанні запиту. Спробуйте ще раз.');
  });
}

function updateAssignmentStatus(requestId, scanlatorTitle, isAssigned) {
  const statusContainer = document.getElementById(`assignment-status-${requestId}`);
  
  if (isAssigned && scanlatorTitle) {
    // Show as assigned with unassign button
    statusContainer.innerHTML = `
      <div class="flex items-center justify-between gap-1">
        <div class="flex items-center gap-1 min-w-0 flex-1">
          <div class="h-3 w-3 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center flex-shrink-0">
            <svg class="h-1.5 w-1.5 text-green-600 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
            </svg>
          </div>
          <span class="text-2xs font-medium text-green-700 dark:text-green-400 truncate">${scanlatorTitle}</span>
        </div>
        <button onclick="unassignRequest(${requestId})" 
                class="text-2xs bg-red-500 hover:bg-red-600 text-white font-medium px-2 py-0.5 rounded text-center flex-shrink-0 transition-colors duration-200">
          ×
        </button>
      </div>
    `;
  } else {
    // Show as available for assignment
    statusContainer.innerHTML = `
      <div class="flex items-center gap-1">
        <div class="h-3 w-3 rounded-full bg-orange-100 dark:bg-orange-900/30 flex items-center justify-center flex-shrink-0">
          <svg class="h-1.5 w-1.5 text-orange-600 dark:text-orange-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z" clip-rule="evenodd"/>
          </svg>
        </div>
        <span class="text-2xs text-orange-700 dark:text-orange-400">Вільний</span>
      </div>
    `;
  }
}

function showSuccessMessage(message) {
  showNotification(message, 'success');
}

function showErrorMessage(message) {
  showNotification(message, 'error');
}

function showNotification(message, type = 'success') {
  if (!message) return;
  
  // Calculate position based on existing notifications
  const existingNotifications = document.querySelectorAll('.notification-toast');
  const topOffset = 16 + (existingNotifications.length * 80); // 16px base + 80px per notification
  
  // Create notification element
  const notification = document.createElement('div');
  notification.classList.add('notification-toast');
  
  // Base classes for all notifications
  const baseClasses = 'fixed right-4 px-4 py-3 rounded-lg shadow-lg z-50 flex items-center gap-3 max-w-sm transform transition-all duration-300 ease-in-out';
  
  // Type-specific classes
  const typeClasses = {
    success: 'bg-green-100 dark:bg-green-900/30 border border-green-200 dark:border-green-800 text-green-800 dark:text-green-200',
    error: 'bg-red-100 dark:bg-red-900/30 border border-red-200 dark:border-red-800 text-red-800 dark:text-red-200'
  };
  
  notification.className = `${baseClasses} ${typeClasses[type] || typeClasses.success}`;
  notification.style.top = `${topOffset}px`;
  
  // Create icon
  const icon = document.createElement('div');
  icon.className = 'flex-shrink-0';
  
  if (type === 'success') {
    icon.innerHTML = `
      <svg class="w-5 h-5 text-green-600 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
      </svg>
    `;
  } else {
    icon.innerHTML = `
      <svg class="w-5 h-5 text-red-600 dark:text-red-400" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
      </svg>
    `;
  }
  
  // Create message text
  const messageText = document.createElement('div');
  messageText.className = 'text-sm font-medium flex-1';
  messageText.textContent = message;
  
  // Create close button
  const closeButton = document.createElement('button');
  closeButton.className = 'flex-shrink-0 ml-2 text-current opacity-70 hover:opacity-100 transition-opacity duration-200';
  closeButton.innerHTML = `
    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
    </svg>
  `;
  
  // Assemble notification
  notification.appendChild(icon);
  notification.appendChild(messageText);
  notification.appendChild(closeButton);
  
  // Add to page with animation
  notification.style.transform = 'translateX(100%)';
  notification.style.opacity = '0';
  document.body.appendChild(notification);
  
  // Animate in
  requestAnimationFrame(() => {
    notification.style.transform = 'translateX(0)';
    notification.style.opacity = '1';
  });
  
  // Remove notification function
  const removeNotification = () => {
    notification.style.transform = 'translateX(100%)';
    notification.style.opacity = '0';
    setTimeout(() => {
      if (notification.parentNode) {
        notification.remove();
      }
    }, 300);
  };
  
  // Close button click handler
  closeButton.addEventListener('click', removeNotification);
  
  // Auto-remove after delay
  const autoRemoveDelay = type === 'error' ? 5000 : 3000; // Errors stay longer
  setTimeout(removeNotification, autoRemoveDelay);
}

// Close dropdowns when clicking outside
document.addEventListener('click', function(event) {
  if (!event.target.closest('.relative')) {
    document.querySelectorAll('[id^="assignment-dropdown-"]').forEach(element => {
      element.classList.add('hidden');
    });
  }
});
</script>
